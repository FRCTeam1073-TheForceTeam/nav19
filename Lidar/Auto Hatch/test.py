import distance_methods
import sys
import unittest

########## Test ###########

# quality, scan, degrees, distance

# Test case 1 : 4 towers in front (robot @ 100:114)
#tc1_data = [(15,310.31,17.00), # noise
            #(15,333.9,225.0), # tower A
            #(15,322.31,5.00), # noise
            #(15,345.75,406.5), # tower B
            #(15,350.31,700.00), # noise
            #(15,15.31,600.00), # noise
            #(15,29.62,453.22), # tower C
            #(15,35.31,600.00), # noise
            #(15,47.96,301.63),# tower D
            #(15,87.5,34.89)] # noise
tc1_data =[
(0,0.0,0.0),
(11,122.25,216.25),
(12,124.09375,220.0),
(14,125.921875,218.25),
(14,126.375,219.25),
(15,129.609375,207.0),
(15,130.609375,208.5),
(15,132.359375,206.25),
(15,135.109375,205.75),
(15,136.9375,206.0),
(15,138.734375,205.75),
(15,139.734375,207.75),
(15,142.40625,208.0),
(15,144.21875,209.0),
(15,146.046875,212.5),
(15,147.890625,216.75),
(15,149.953125,0.0),
(15,151.78125,0.0),
(15,153.609375,0.0),
(0,155.421875,0.0),
(12,152.953125,381.75),
(0,159.078125,0.0),
(0,160.90625,0.0),
(0,162.796875,0.0),
(0,164.625,0.0),
(12,166.453125,0.0),
(15,160.640625,3942.75),
(14,162.484375,3810.0),
(15,164.359375,3623.0),
(15,166.203125,3502.5),
(15,168.0625,3412.75),
(15,169.90625,3324.0),
(15,171.734375,3210.0),
(15,173.609375,3121.0),
(15,175.4375,3055.25),
(15,177.265625,2988.0),
(15,179.171875,2915.25),
(15,181.015625,2853.5),
(15,182.875,2800.25),
(15,184.734375,2745.25),
(15,186.546875,2715.5),
(15,188.390625,2679.75),
(15,190.265625,2645.25),
(15,192.59375,1350.75),
(15,194.515625,1311.75),
(15,196.34375,1303.5),
(15,205.0625,0.0),
(15,206.890625,0.0),
(15,201.78125,1324.5),
(15,203.65625,1292.0),
(15,205.484375,1292.75),
(15,214.25,0.0),
(15,216.09375,0.0),
(15,210.515625,2437.25),
(15,212.375,2431.75),
(15,214.1875,2434.0),
(15,216.03125,2429.0),
(15,217.859375,2454.75),
(15,219.6875,2449.0),
(15,221.515625,2474.75),
(15,223.359375,2493.25),
(15,225.203125,2496.25),
(15,226.96875,2526.75),
(15,228.828125,2540.0),
(15,230.640625,2569.75),
(15,232.46875,2590.25),
(15,234.3125,2614.25),
(15,236.140625,2664.25),
(15,237.9375,2715.5),
(15,239.75,2740.75),
(15,241.59375,2793.25),
(15,243.4375,2726.25),
(15,245.3125,2596.25),
(15,247.140625,2539.25),
(0,256.390625,0.0),
(15,250.625,3098.25),
(15,252.421875,3175.75),
(15,254.25,3257.25),
(15,256.03125,3373.5),
(15,257.859375,3464.25),
(15,259.6875,3591.5),
(15,261.484375,3733.0),
(15,263.296875,3860.5),
(15,265.109375,4022.5),
(12,266.921875,4237.25),
(15,269.9375,922.25),
(15,271.84375,900.75),
(15,273.671875,881.75),
(15,276.171875,867.0),
(15,278.03125,850.0),
(15,280.0,838.5),
(15,281.71875,833.0),
(15,283.734375,818.25),
(15,285.671875,808.0),
(15,287.5,803.75),
(15,289.390625,796.75),
(15,291.328125,789.0),
(15,293.140625,785.75),
(15,295.109375,780.75),
(15,296.96875,765.0),
(15,298.875,764.25),
(15,306.78125,0.0),
(15,307.6875,0.0),
(12,309.5,0.0),
(15,311.296875,0.0),
(12,306.109375,1438.5),
(15,307.875,1484.5),
(11,309.671875,1469.75),
(12,311.484375,1445.75),
(13,313.328125,1437.75),
(15,315.21875,1327.25),
(0,323.671875,0.0),
(15,319.546875,791.25),
(15,321.421875,790.5),
(15,323.09375,808.0),
(15,325.546875,821.5),
(15,327.328125,833.0),
(15,329.078125,846.0),
(15,330.953125,860.0),
(15,332.71875,879.5),
(15,334.59375,896.5),
(15,336.453125,917.0),
(15,338.171875,943.25),
(15,340.078125,961.0),
(15,341.875,987.0),
(15,343.59375,1014.0),
(0,352.046875,0.0),
(0,353.875,0.0),
(15,355.734375,0.0)]

# Test case 2 : 4 towers in back (robot @ 110:752)

# Test case 3 : 2 towers in front, 2 in back

# Test case 4 : more than 4 candidates

class TestExtractFeatures(unittest.TestCase):

    def test_point_getter(self):
        points = distance_methods.auto_hatch.point_getter(tc1_data)
        find_dist = distance_methods.auto_hatch.produceTargetRangeSimple(points)
        self.assertEqual(3, len(points), 'too many points')
        self.assertEqual(216.75, points[0][1], 'nope')
        self.assertEqual(381.75, points[1][1], 'nope')
        self.assertEqual(166.94479813204427, points[2], 'nope')
        return

    def setup(self):
            f = open('./testdata/test_192_144_0', 'r')

if __name__ == '__main__':
    unittest.main()
